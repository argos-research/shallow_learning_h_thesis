15-Nov-19 00:23:34) [KNN.py: __init__ - 184] - 




15-Nov-19 00:23:34) [KNN.py: __init__ - 185] - 




15-Nov-19 00:23:34) [KNN.py: __init__ - 186] - =============== Initialize the KNN_class variable ==================
15-Nov-19 00:23:34) [KNN.py: __init__ - 187] - ===== Working on following data set: ======
15-Nov-19 00:23:34) [KNN.py: __init__ - 188] - Datasets/TestDataset/_feature_data.csv
15-Nov-19 00:23:34) [KNN.py: __init__ - 190] -  CurrentDate: 2019-11-15 00-23-34
15-Nov-19 00:23:34) [KNN.py: __init__ - 191] - 




15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 268] - ------------------------- Random-Search ------------------------
15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 275] - 


15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 277] - ------------------------- Hyperparameter_optimization_new ------------------------
15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 278] - --------------------------------------------------
15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 279] -     Search iteration: 1
15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 280] -     CurrentDate: 2019-11-15 00-23-34
15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 281] - --------------------------------------------------
15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 282] - 


15-Nov-19 00:23:34) [KNN.py: hyperparameter_optimization_search - 285] - {'n_neighbors': [25], 'weights': ['distance'], 'algorithm': ['kd_tree'], 'n_jobs': [-1], 'leaf_size': [30], 'p': [3]}
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 319] - -----------------All_iterated_models----------------
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 330] - (' mean_score:0.175', ' std_score:0.04468309177000934', " params:{'weights': 'distance', 'p': 3, 'n_neighbors': 25, 'n_jobs': -1, 'leaf_size': 30, 'algorithm': 'kd_tree'}")
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 334] - ----------------Best_Model----------------
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 367] - accuracy_score:12.5,n_neighbors:25,weights:distance,algorithm:kd_tree,p:3,leaf_size:30,dataset_name_path:Datasets/TestDataset/_feature_data.csv,running_time:2.863288164138794
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 383] - ---------------- Precision_Recall ----------------
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 384] - Precision:[0.45 0.16 1.  ],   Recall:[1.         0.22222222 0.        ],   Thresholds:[0 1]
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 420] - ---------------- Grid_scores_on_development_set ----------------
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 427] - [0.175]
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 428] - [0.04468309]
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 434] - Mean:0.175 std:0.08936618354001868 params:{'weights': 'distance', 'p': 3, 'n_neighbors': 25, 'n_jobs': -1, 'leaf_size': 30, 'algorithm': 'kd_tree'}
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 443] -  
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 444] - Detailed classification report:
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 445] - The model is trained on the full development set.
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 446] - The scores are computed on the full evaluation set.
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 447] -  
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 451] -               precision    recall  f1-score   support

           0       0.07      0.05      0.05        22
           1       0.16      0.22      0.19        18

    accuracy                           0.12        40
   macro avg       0.11      0.13      0.12        40
weighted avg       0.11      0.12      0.11        40

15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 454] - ---------------- Confusion_matrix ----------------
15-Nov-19 00:23:37) [KNN.py: calculate_score_and_report - 457] - [[ 1 21]
 [14  4]]
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 393] - ----------------  print best parameter after tuning: ----------------
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 394] - {'weights': 'distance', 'p': 3, 'n_neighbors': 25, 'n_jobs': -1, 'leaf_size': 30, 'algorithm': 'kd_tree'}
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 399] - ---------------- print how our best model looks after hyper-parameter tuning: ----------------
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 400] - KNeighborsClassifier(algorithm='kd_tree', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=25, p=3,
                     weights='distance')
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 406] - ---------------- optimized_model.cv_results_.keys: ----------------
15-Nov-19 00:23:37) [KNN.py: process_trained_model_information - 407] - ['mean_fit_time', 'mean_score_time', 'mean_test_score', 'param_algorithm', 'param_leaf_size', 'param_n_jobs', 'param_n_neighbors', 'param_p', 'param_weights', 'params', 'rank_test_score', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'std_fit_time', 'std_score_time', 'std_test_score']
15-Nov-19 00:23:37) [KNN.py: hyperparameter_optimization_search - 308] - ---------------- hyperparameter-optimization-end  ----------------
15-Nov-19 00:23:37) [KNN.py: calculate_accuracy_score - 240] - Single Accuracy score of model: 0.325
